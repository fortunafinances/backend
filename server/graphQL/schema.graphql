
######################### ENUMS ################################
enum OrderSide {
    Buy
    Sell
}

enum OrderType {
    Limit
    Market
    Transfer
}

enum OrderStatus {
    Placed
    Executed
}
######################### INPUTS ################################

input AccIdInput {
    accId: Int!
}

input TickerInput {
    ticker: String!
}

input UserIdInput {
    userId: String!
}

######################### RETURN TYPES ##########################
type UserReturn {
    user: User
    message: String
}

type AccountReturn {
    account: Account
    message: String
}



######################### TYPES ################################
type User {
    userId: ID!
    onboardingComplete: Boolean
    username: String
    firstName: String
    lastName: String
    email: String
    phoneNumber: String
    picture: String
    bankName: String
    registerDate: String
}

type Account {
    accId: Int!
    name: String!
    cash: Float!
}

# Order displays trade information
# transfers are not included in orders
type Order {
    id: ID!
    accId: Int!
    type: OrderType!
    side: OrderSide!
    status: OrderStatus!
    tradePrice: Float!
    tradeQty: Int!
    date: String!
    stock: Stock!
}

type Holding {
    id: ID!
    accId: String!
    stockQuantity: Int!
    stock: Stock!
}

type Activity {
    id: ID!
    accId: Int!
    date: String!
    type: String!
    description: String!
    amount: Float!
}

type Stock {
    ticker: String!
    name: String!
    currPrice: Float!
    highPrice: Float!
    lowPrice: Float!
    openPrice: Float!
    prevClosePrice: Float!
    description: String
    sector: String
    country: String
    website: String
    officerTitle: String
    officerName: String
}

type Transfer {
    sendAccId: Int!
    receiveAccId: Int!
    transferAmt: Float!
    date: String!
}

type DisplayBar {
    total: Float!
    invest: Float!
    cash: Float!
}

type PieData {
    labels: [String]
    values: [Float]
    message: String
}



######################### QUERIES ################################

type Query {
    oneStock(input: TickerInput): Stock!
    stocks: [Stock]!
    orders(input: AccIdInput): [Order]!
    holdings(input: AccIdInput): [Holding]!
    activity(input: AccIdInput): [Activity]!
    displayBar(input: AccIdInput): DisplayBar!
    accounts(input: UserIdInput): [Account]!
    pieData(input: AccIdInput): PieData!
    allAccValue(input: UserIdInput): Float!
    genAIQuery(input: String): String!
}

######################### MUTATIONS ################################

type Mutation {
    insertUser(
        userId: ID!
        onboardingComplete: Boolean
        username: String
        firstName: String
        lastName: String
        email: String
        phoneNumber: String
        picture: String
        bankName: String
        ): UserReturn

    insertAccount(
        name: String!
        userId: ID!
    ): AccountReturn

    insertTrade(
        accID: Int!
        type: OrderType!
        side: OrderSide!
        ticker: String!
        tradeQty: Int!
    ): String

    insertTransfer(
        sendAccId: Int!
        receiveAccId: Int!
        transferAmt: Float!
    ): String
}
