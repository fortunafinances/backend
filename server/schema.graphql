
enum OrderSide {
    Buy
    Sell
}

enum OrderType {
    Limit
    Market
    Transfer
}

enum OrderStatus {
    Placed
    Executed
}

input AccIdInput {
    accId: Int!
}

input TickerInput {
    ticker: String!
}

# Order displays trade information
# transfers are not included in orders
type Order {
    accId: Int!
    type: OrderType!
    side: OrderSide!
    status: OrderStatus!
    tradePrice: Float!
    tradeQty: Int!
    date: String!
    stock: Stock!
}

type Holding {
    accountId: String!
    stockQuantity: Int!
    stock: Stock!
}

type Activity {
    accountId: Int!
    date: String!
    type: String!
    description: String!
    amount: Float!
}

type Stock {
    ticker: String!
    name: String!
    currPrice: Float!
    highPrice: Float!
    lowPrice: Float!
    openPrice: Float!
    prevClosePrice: Float!
    description: String
    sector: String
    country: String
    website: String
    officerTitle: String
    officerName: String
}

type Transfer {
    sendAccId: Int!
    receiveAccId: Int!
    transferAmt: Float!
    date: String!
}

type DisplayBar {
    total: Float!
    invest: Float!
    cash: Float!
}

type Query {
    oneStock(input: TickerInput): Stock!
    stocks: [Stock]!
    orders(input: AccIdInput): [Order]!
    holdings(input: AccIdInput): [Holding]!
    activity(input: AccIdInput): [Activity]!
    displayBar(input: AccIdInput): DisplayBar!
}

type Mutation {

    insertTrade(
        accID: Int!
        type: OrderType!
        side: OrderSide!
        ticker: String!
        tradeQty: Int!
    ): String

    insertTransfer(
        sendAccId: Int!
        receiveAccId: Int!
        transferAmt: Float!
    ): String
}
